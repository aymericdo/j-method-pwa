{"ast":null,"code":"import { NativeDateAdapter } from '@angular/material/core';\nimport * as i0 from \"@angular/core\";\nexport let MyDateAdapter = /*#__PURE__*/(() => {\n  var _class;\n  class MyDateAdapter extends NativeDateAdapter {\n    getFirstDayOfWeek() {\n      return 1;\n    }\n    format(date, displayFormat) {\n      if (displayFormat === 'input') {\n        let day = date.getDate().toString();\n        day = +day < 10 ? '0' + day : day;\n        let month = (date.getMonth() + 1).toString();\n        month = +month < 10 ? '0' + month : month;\n        const year = date.getFullYear();\n        return `${day}-${month}-${year}`;\n      }\n      return date.toDateString();\n    }\n  }\n  _class = MyDateAdapter;\n  _class.ɵfac = /*@__PURE__*/function () {\n    let ɵMyDateAdapter_BaseFactory;\n    return function MyDateAdapter_Factory(t) {\n      return (ɵMyDateAdapter_BaseFactory || (ɵMyDateAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n    };\n  }();\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return MyDateAdapter;\n})();\nexport const APP_DATE_FORMATS = {\n  parse: {\n    dateInput: {\n      month: 'short',\n      year: 'numeric',\n      day: 'numeric'\n    }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'numeric'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}